import telebot
import speech_recognition as sr
import subprocess

r = sr.Recognizer()
Token = '1873974788:AAG-1wbZTOwhYAuwe840qTnx8ZnRFkO4heM'
bot = telebot.TeleBot(Token)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–º–µ–Ω—ã —è–∑—ã–∫–∞
EN = 'en-GB'
RU = 'ru-RU'
FR = 'fr-FR'
DE = 'de-DE'
JP = 'ja-JP'
LAN = RU  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫


# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@bot.message_handler(commands=["start"])
def command_start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")


# –ö–æ–º–∞–Ω–¥–∞ /language –≤—ã–∑—ã–≤–∞–µ—Ç –¥–≤–µ –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç –≤ callback —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫
@bot.message_handler(commands=['language'])
def language_message(message):
    markup = telebot.types.InlineKeyboardMarkup()
    markup.add(telebot.types.InlineKeyboardButton(text='English üá¨üáß', callback_data=EN))
    markup.add(telebot.types.InlineKeyboardButton(text='–†—É—Å—Å–∫–∏–π üá∑üá∫', callback_data=RU))
    markup.add(telebot.types.InlineKeyboardButton(text='Fran√ßais üá´üá∑', callback_data=FR))
    markup.add(telebot.types.InlineKeyboardButton(text='Deutsche üá©üá™', callback_data=DE))
    markup.add(telebot.types.InlineKeyboardButton(text='Êó•Êú¨Ë™û üáØüáµ', callback_data=JP))
    bot.send_message(message.chat.id, text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏", reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–º–µ–Ω—ã —è–∑—ã–∫–∞, –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –≥–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è LAN, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏ recognize_google, –∞ —Ç–∞–∫–∂–µ –ø–µ—á–∞—Ç–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ —è–∑—ã–∫–∞
@bot.callback_query_handler(func=lambda call: True)
def query_handler(call):
    answer = ''
    global LAN
    if call.data == EN:
        answer = 'Now bot use English (United Kingdom). Thank you!'
        LAN = EN
    elif call.data == RU:
        answer = '–¢–µ–ø–µ—Ä—å –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫. –°–ø–∞—Å–∏–±–æ!'
        LAN = RU
    elif call.data == FR:
        answer = 'Le bot utilise d√©sormais le fran√ßais. Merci!'
        LAN = FR
    elif call.data == DE:
        answer = 'Der Bot spricht jetzt Deutsch. Danke!'
        LAN = DE
    elif call.data == JP:
        answer = '„Éú„ÉÉ„Éà„ÅØÁèæÂú®„ÄÅÊó•Êú¨Ë™û„Çí‰ΩøÁî®„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ „ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åó„ÅüÔºÅ'
        LAN = JP
    bot.send_message(call.message.chat.id, answer)


@bot.message_handler(content_types=['voice'])
def handle(message):
    # –ó–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ audio.ogg
    fileID = message.voice.file_id
    file = bot.get_file(fileID)
    down_file = bot.download_file(file.file_path)
    with open('audio.ogg', 'wb') as f:
        f.write(down_file)

    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è audio.ogg –≤ audio.wav —Å –ø–æ–º–æ—â—å—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ffmpeg
    process = subprocess.run(['ffmpeg', '-i', 'audio.ogg', 'audio.wav', '-y'])

    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ speech_recognition –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞—â–æ–≤–∞–Ω–∏—è audio.wav –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    file = sr.AudioFile('audio.wav')
    with file as source:
        try:
            audio = r.record(source)
            global LAN
            text = r.recognize_google(audio, language=LAN)
            bot.send_message(message.chat.id, text)
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
        except sr.UnknownValueError:
            bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏ –≥–æ–ª–æ—Å–∞!")

# –°–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ /help
answer_help = '''
    –ü—Ä–∏–≤–µ—Ç! ‚úã –≠—Ç–æ—Ç –±–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –≤ —Ç–µ–∫—Å—Ç –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∞–µ—Ç. 
    
–ö–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –±–æ—Ç:
    /help ‚Äî –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ)
    /start ‚Äî –ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞
    /language ‚Äî –í—ã–±–æ—Ä —è–∑—ã–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏. –î–æ—Å—Ç—É–ø–Ω—ã –†—É—Å—Å–∫–∏–π, –ê–Ω–≥–ª–∏–π—Å–∫–∏–π, –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π, –ù–µ–º–µ—Ü–∫–∏–π, –Ø–ø–æ–Ω—Å–∫–∏–π
    
–í–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å—é–¥–∞ ‚Äî @speech_bot_questions_bot
'''

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def process_help_command(message):
    global answer_help
    bot.send_message(message.chat.id, answer_help)


# –£—Å–ª–æ–≤–∏–µ, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –±–æ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–∂–∏–¥–∞–ª –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ü–µ
if __name__ == '__main__':
    bot.infinity_polling()

